/*
 * @lc app=leetcode.cn id=20 lang=golang
 *
 * [20] 有效的括号
 *
 * https://leetcode-cn.com/problems/valid-parentheses/description/
 *
 * algorithms
 * Easy (35.96%)
 * Total Accepted:    43.9K
 * Total Submissions: 121.2K
 * Testcase Example:  '"()"'
 *
 * 给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。
 *
 * 有效字符串需满足：
 *
 *
 * 左括号必须用相同类型的右括号闭合。
 * 左括号必须以正确的顺序闭合。
 *
 *
 * 注意空字符串可被认为是有效字符串。
 *
 * 示例 1:
 *
 * 输入: "()"
 * 输出: true
 *
 *
 * 示例 2:
 *
 * 输入: "()[]{}"
 * 输出: true
 *
 *
 * 示例 3:
 *
 * 输入: "(]"
 * 输出: false
 *
 *
 * 示例 4:
 *
 * 输入: "([)]"
 * 输出: false
 *
 *
 * 示例 5:
 *
 * 输入: "{[]}"
 * 输出: true
 *
 */
func isValid(s string) bool {
	quotesMap := map[int32]int32{
		')': '(',
		']': '[',
		'}': '{',
	}
	strStack := make([]int32, len(s)/2+1)
	cursor := 0
	for _, item := range s {
		if value, ok := quotesMap[item]; ok {
			cursor--
			if cursor < 0 || strStack[cursor] != value {
				return false
			}
		} else {
			strStack[cursor] = item
			cursor++
		}
	}

	return cursor == 0
}

//runtime:24 ms
//memory:880.6 KB
